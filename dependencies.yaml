options:
  languages: [ "java", "scala:2.12.8" ]
  transitivity: exports
  buildHeader:
  - load("@io_bazel_rules_scala//scala:scala_import.bzl", "scala_import")
  - load("@io_bazel_rules_scala//scala:scala.bzl", "scala_library", "scala_binary", "scala_test")

dependencies:
  org.typelevel:
    cats:
      version: "2.0.0"
      lang: scala
      modules:
        - core
  com.softwaremill.sttp.client:
    core:
      version: "2.0.0-M9"
      lang: scala
  io.circe:
    circe:
      version: "0.12.3"
      lang: "scala"
      modules:
        - core
        - generic
        - parser
    circe-generic:
      version: "0.12.3"
      lang: scala
      exports: # due to the macros, these need to be here at compile time
        - "com.chuusai:shapeless"
        - "io.circe:circe-core"
        - "org.typelevel:cats-core"
    circe-yaml:
      version: "0.10.0"
      lang: scala
  org.sangria-graphql:
    sangria:
      version: "2.0.0-M1"
      lang: "scala"
    sangria-circe:
      version: "1.3.0"
      lang: "scala"
  com.chuusai:
    shapeless:
      version: "2.3.3"
      lang: "scala"
  com.typesafe.akka:
    akka-http:
      version: "10.1.10"
      lang: "scala"
    akka-stream:
      version: "2.5.23"
      lang: "scala"
  de.heikoseeberger:
    akka-http-circe:
      version: "1.29.1"
      lang: scala


replacements:
  org.scala-lang:
    scala-library:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_library"
    scala-reflect:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_reflect"
    scala-compiler:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_compiler"

  org.scala-lang.modules:
    scala-parser-combinators:
      lang: scala
      target:
        "@io_bazel_rules_scala_scala_parser_combinators//:io_bazel_rules_scala_scala_parser_combinators"
    scala-xml:
      lang: scala
      target:
        "@io_bazel_rules_scala_scala_xml//:io_bazel_rules_scala_scala_xml"